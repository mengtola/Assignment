/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.2.19.v20160908
 * Generated at: 2017-01-25 04:04:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
if(session.getAttribute("UserID") == null) {
	response.sendRedirect("login.jsp");
}


      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("\t<div class=\"content\">\r\n");
      out.write("\t\t<div class=\"content-head\">\r\n");
      out.write("\t\t\t<h3 style=\"float:left;\"></h3>\r\n");
      out.write("\t\t\t<div style=\"float:right;\"><button class=\"easyui-linkbutton\" style=\"width:130px;height:35px;\" data-options=\"iconCls:'icon-add'\" onClick=\"window.location='/add.jsp'\">Add Customer</button></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div style=\"margin-bottom:10px;clear:both;\"></div>\r\n");
      out.write("\t\t<table style=\"width:100%;height:480px;\" id=\"dgList\"></table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$('#dgList').datagrid({\r\n");
      out.write("\t\t\turl:'http://localhost:9999/customer',\r\n");
      out.write("\t\t\tcolumns:[[\r\n");
      out.write("\t\t\t\t{field: 'cus_id', align:\"center\",width:\"60\",formatter:function(value,row,index){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\treturn \"<a href='/edit?id=\"+value+\"'><img src='images/edit.png' style='width:20px;'/></a>\";\r\n");
      out.write("\t\t\t\t}},\r\n");
      out.write("\t\t\t\t{field: 'cus_name', title: \"Customer Name\", width: \"140\"},\r\n");
      out.write("\t\t\t\t{field: 'cus_gender', title: \"Gender\", width: \"100\", formatter:function(value,row,index){\r\n");
      out.write("\t\t\t\t\tif(value == 1) {\r\n");
      out.write("\t\t\t\t\t\treturn \"Male\";\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\treturn \"Female\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}},\r\n");
      out.write("\t\t\t\t{field: 'cus_dob', title: \"Date Of Birth\",width: \"140\"},\r\n");
      out.write("\t\t\t\t{field: 'cus_email_address', title: \"Email Address\",width: \"250\"},\r\n");
      out.write("\t\t\t\t{field: 'cus_address', title: \"Address\",width: \"250\"},\r\n");
      out.write("\t\t\t\t{field: 'cus_phone', title: \"Phone\", width: \"140\"},\r\n");
      out.write("\t\t\t\t{field: 'cus_created', title: \"Created\", width: \"140\"}\r\n");
      out.write("\t\t\t]],\r\n");
      out.write("\t\t\trownumbers: true,\r\n");
      out.write("\t\t\tpagination: true,\r\n");
      out.write("\t\t\tsingleSelect: true,\r\n");
      out.write("\t\t\tpageSize: 20,\r\n");
      out.write("\t\t\tpageList: [20,30,40,50,100,200]\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
